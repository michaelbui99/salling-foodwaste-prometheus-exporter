/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation libs.guava

    // Prometheus
    implementation libs.prometheus.metrics.core
    implementation libs.prometheus.metrics.exporter.httpserver

    // JSON Serialization
    implementation libs.gson

    // Logging
    implementation(platform(libs.log4j.bom))
    implementation 'org.apache.logging.log4j:log4j-api'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'
//    runtimeOnly 'org.apache.logging.log4j:log4j-layout-template-json'
}

def MAIN_CLASS = 'dk.michaelbui.salling.foodwaste.prometheus.exporter.App'

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }

    jar {
        manifest {
            attributes(
                    "Main-Class": MAIN_CLASS,
            )
        }

        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = MAIN_CLASS
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
